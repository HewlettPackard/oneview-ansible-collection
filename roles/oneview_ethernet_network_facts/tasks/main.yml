---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Gather facts about all Ethernet Networks
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: ethernet_networks

- name: Gather paginated, sorted and filtered facts about Ethernet Networks
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    params:
      start: 0
      count: 3
      sort: 'name:descending'
      filter: "purpose=General"

- ansible.builtin.debug:
    var: ethernet_networks

- name: Gather facts about an Ethernet Network by name
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ ethernet_networks[0]['name'] }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: ethernet_networks

- name: Gather facts about an Ethernet Network by name with options
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ ethernet_networks['name'] }}"
    options:
      - associatedProfiles
      - associatedUplinkGroups
  delegate_to: localhost

- ansible.builtin.debug:
    var: enet_associated_profiles
- ansible.builtin.debug:
    var: enet_associated_uplink_groups

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
