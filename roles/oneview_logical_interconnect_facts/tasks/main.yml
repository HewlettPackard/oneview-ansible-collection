---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Gather facts about all Logical Interconnects
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: logical_interconnects

- name: Gather paginated and sorted facts about Logical Interconnects
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    params:
      start: 0
      count: 3
      sort: 'name:descending'

- ansible.builtin.debug:
    var: logical_interconnects

- name: Gather facts about a Logical Interconnect by name
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: logical_interconnects['uri']

- name: Gather facts about a Logical Interconnect by name with QOS Configuration
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - qos_aggregated_configuration
  delegate_to: localhost

- ansible.builtin.debug:
    var: qos_aggregated_configuration

- name: Gather facts about the SNMP configuration on the logical interconnect that matches the specified name
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - snmp_configuration
  delegate_to: localhost

- ansible.builtin.debug:
    var: snmp_configuration

- name: Gather facts about the IGMP settings on the logical interconnect that matches the specified name
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - igmp_settings
  delegate_to: localhost

- ansible.builtin.debug:
    var: igmp_settings

- name: "Gather facts about the port monitor configuration on the logical interconnect that matches the specified name"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - port_monitor
  delegate_to: localhost

- ansible.builtin.debug:
    var: port_monitor

- name: "Gather facts about an internal VLAN IDs for the provisioned networks on a logical interconnect that matches the specified name"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - internal_vlans
  delegate_to: localhost

- ansible.builtin.debug:
    var: internal_vlans

- name: "Gather facts about a forwarding information base data for a logical interconnect that matches the specified name"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - forwarding_information_base
  delegate_to: localhost

- ansible.builtin.debug:
    var: forwarding_information_base

- name: "Gather facts about an installed firmware for a logical interconnect that matches the specified name"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - firmware
  delegate_to: localhost

- ansible.builtin.debug:
    var: firmware

- name: "Gather facts about the collection of uplink ports from the member interconnects which are eligible for
          assignment to an analyzer port on the logical interconnect"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - unassigned_uplink_ports
  delegate_to: localhost

- ansible.builtin.debug:
    var: unassigned_uplink_ports

- name: "Gather facts about the collection of ports from the member interconnects which are eligible for
          assignment to an analyzer port on the logical interconnect"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - unassigned_ports
  delegate_to: localhost

- ansible.builtin.debug:
    var: unassigned_ports

- name: "Gather facts about the telemetry configuration of the logical interconnect"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - telemetry_configuration
  delegate_to: localhost

- ansible.builtin.debug:
    var: telemetry_configuration

- name: "Gather the Ethernet interconnect settings for the logical interconnect"
  oneview_logical_interconnect_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_interconnect.logical_interconnect_name }}"
    options:
      - ethernet_settings
  delegate_to: localhost

- ansible.builtin.debug:
    var: ethernet_settings

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
