---
- name: Gather facts about all Scopes
  oneview_scope_facts:
    config: "{{ config }}"
  delegate_to: localhost

- name: Add a Server Hardware
  oneview_server_hardware:
    config: "{{ config }}"
    state: present
    data:
          hostname: '{{ server_hardware_hostname }}'
          username: '{{ server_hardware_username }}'
          password: '{{ server_hardware_password }}'
          force: false
          licensingIntent: "OneView"
          configurationState: "Managed"
          initialScopeUris: 
          - "{{ scopes[0]['uri'] }}" #Supported only with OneView API version >= 600.
  delegate_to: localhost
  when: variant == 'C7000'

- name: Do nothing when the server hardware is already present
  oneview_server_hardware:
    config: "{{ config }}"
    state: present
    data:
          hostname: '{{ server_hardware_hostname }}'
          username: '{{ server_hardware_username }}'
          password: '{{ server_hardware_password }}'
          force: false
          licensingIntent: "OneView"
          configurationState: "Managed"
  delegate_to: localhost
  when: variant == 'C7000'

#This task available only with OneView API version >= 600.
- name: Add multiple rack-mount servers
  oneview_server_hardware:
    config: "{{ config }}"
    state: multiple_servers_added
    data:
          mpHostsAndRanges: "{{ multiple_hosts }}"
          username: "{{ server_hardware_username }}"
          password: "{{ server_hardware_password }}"
          initialScopeUris: 
          - "{{ scopes[0]['uri'] }}"
          licensingIntent: "OneView"
          configurationState: "Managed"
  delegate_to: localhost
  when: variant == 'C7000'

- name: Gather facts about all Server Hardwares
  oneview_server_hardware_facts:
    config: "{{ config }}"
  delegate_to: localhost

- debug: var=server_hardwares


- name: Power Off the server hardware
  oneview_server_hardware:
    config: "{{ config }}"
    state: power_state_set
    data:
        name: "{{ server_hardwares[0]['name'] }}"
        powerStateData:
            powerState: "Off"
            powerControl: "MomentaryPress"
  delegate_to: localhost

- name: Power On the server hardware
  oneview_server_hardware:
    config: "{{ config }}"
    state: power_state_set
    data:
        name: "{{ server_hardwares[0]['name'] }}"
        powerStateData:
            powerState: "On"
            powerControl: "MomentaryPress"
  delegate_to: localhost

- name: Refresh the server hardware
  oneview_server_hardware:
    config: "{{ config }}"
    state: refresh_state_set
    data:
        name: "{{ server_hardwares[0]['name'] }}"
        refreshStateData:
            refreshState: "RefreshPending"
  delegate_to: localhost

- name: Update the Server Hardware iLO firmware version
  oneview_server_hardware:
    config: "{{ config }}"
    state: ilo_firmware_version_updated
    data:
        name: "{{ server_hardwares[0]['name'] }}"
  delegate_to: localhost

- name: Reset the Server Hardware iLO State
  oneview_server_hardware:
    config: "{{ config }}"
    state: ilo_state_reset
    data:
        name: "{{ server_hardwares[0]['name'] }}"
  delegate_to: localhost

- name: Set the server UID state off
  oneview_server_hardware:
    config: "{{ config }}"
    state: uid_state_off
    data:
        name: "{{ server_hardwares[0]['name'] }}"
  delegate_to: localhost

# Commenting below tasks to ensure continuity for automation script
# - name: Remove the server hardware by its IP
#   oneview_server_hardware:
#     config: "{{ config }}"
#     state: absent
#     data:
#         name: '{{ server_hardware_hostname }}'
#   delegate_to: localhost

# - name: Do nothing when the server hardware is already removed
#   oneview_server_hardware:
#     config: "{{ config }}"
#     state: absent
#     data:
#         name: '{{ server_hardware_hostname }}'
#   delegate_to: localhost
