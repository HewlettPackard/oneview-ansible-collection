---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Get currentVersion from URL
  oneview_version_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
  when: config_file.api_version == ""
  register: version

- name: Print currentVersion if an apiVersion is not specified in config file
  ansible.builtin.set_fact:
    currentVersion: "{{ version.ansible_facts.version.currentVersion | int }}"
  when: config_file.api_version == ""

- name: Print currentVersion if api version is specified in config file
  ansible.builtin.set_fact:
    currentVersion: config_file.api_version | string
  when: config_file.api_version != ""

- name: Create an Ethernet Network
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: '{{ item.name }}'
      vlanId: '{{ item.vlanId }}'
      ethernetNetworkType: Tagged
      purpose: General
      smartLink: false
      privateNetwork: false
      bandwidth:
        maximumBandwidth: 2000
        typicalBandwidth: 1000
  delegate_to: localhost
  with_items:
    - { name: '{{ contents.ethernet_network.network_name }}', vlanId: '201' }
    - { name: 'ovsdk_mgmt_nw', vlanId: '202'}

- name: Update the Ethernet Network changing bandwidth and purpose
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: '{{ contents.ethernet_network.network_name }}'
      purpose: Management
      bandwidth:
        maximumBandwidth: 3000
        typicalBandwidth: 2000
  delegate_to: localhost

- name: Reset to the default network connection template
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: default_bandwidth_reset
    data:
      name: '{{ contents.ethernet_network.network_name }}'
  delegate_to: localhost

- name: Ensure ethernet network has no scopes
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: "{{ contents.ethernet_network.network_name }}"
      scopeUris: []
  when: currentVersion >= '300' and currentVersion <= '500'
  delegate_to: localhost

- name: Rename the Ethernet Network to 'Updated Ethernet Network'
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: '{{ contents.ethernet_network.network_name }}'
      newName: 'Updated Ethernet Network'
  delegate_to: localhost

- name: Delete the Ethernet Network
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: absent
    data:
      name: 'Updated Ethernet Network'
  delegate_to: localhost
  register: deleted

- name: Create Ethernet Networks in bulk
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      vlanIdRange: '1-3,5,7'
      purpose: General
      namePrefix: TestNetwork
      smartLink: false
      privateNetwork: false
      bandwidth:
        maximumBandwidth: 10000
        typicalBandwidth: 2000
  delegate_to: localhost
  register: bulk_ethernet_create
- ansible.builtin.debug:
    msg: "{{ethernet_network_bulk | map(attribute='name') | list }}"
- ansible.builtin.debug:
    msg: "{{ ethernet_network_bulk }}"

- name: Delete Ethernet Networks in bulk
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: absent
    data:
      networkUris:
        - "{{ ethernet_network_bulk[0].uri }}"
        - "{{ ethernet_network_bulk[1].uri }}"
        - "{{ ethernet_network_bulk[2].uri }}"
        - "{{ ethernet_network_bulk[3].uri }}"
        - "{{ ethernet_network_bulk[4].uri }}"
  delegate_to: localhost
  when: currentVersion >= '1600'

- name: Create Ethernet Networks in bulk for automation
  hpe.oneview.oneview_ethernet_network:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      vlanIdRange: '1-3,5,7'
      purpose: General
      namePrefix: TestNetwork
      smartLink: false
      privateNetwork: false
      bandwidth:
        maximumBandwidth: 10000
        typicalBandwidth: 2000
  delegate_to: localhost
  register: bulk_ethernet_create
- ansible.builtin.debug:
    msg: "{{ethernet_network_bulk | map(attribute='name') | list }}"
- ansible.builtin.debug:
    msg: "{{ ethernet_network_bulk }}"

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
