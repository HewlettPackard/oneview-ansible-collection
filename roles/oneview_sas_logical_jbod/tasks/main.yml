---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Gather facts about all Drive Enclosures
  oneview_drive_enclosure_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: drive_enclosures[0]['name']
- ansible.builtin.debug:
    var: drive_enclosures[1]['name']
- ansible.builtin.debug:
    var: drive_enclosures[2]['name']

- ansible.builtin.set_fact:
    drive_enclosure_uri_list: ["{{ drive_enclosures[0]['uri'] }}"]
- ansible.builtin.set_fact:
    drive_bay_uris: ["{{ drive_enclosures[1]['driveBays'][2]['uri'] }}", "{{ drive_enclosures[1]['driveBays'][3]['uri'] }}"]

- name: Create a SAS Logical JBOD
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: "{{ contents.sas_logical_jbod.sas_logical_jbod_name }}"
      description: "Sas logical Jbod description"
      minSizeGB: 200
      maxSizeGB: 600
      numPhysicalDrives: 1
      driveTechnology:
        deviceInterface: "SAS"
        driveMedia: "HDD"
      driveEnclosureUris: "{{ drive_enclosure_uri_list }}"
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Create a SAS logical JBOD by providing specific drive bay URIs
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: "{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-1"
      description: "Sas logical Jbod description"
      eraseData: true
      driveBayUris: "{{ drive_bay_uris }}"
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Do nothing when JBOD already exists
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: "{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-1"
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Change name of an existing JBOD
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: change_name
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}'
      newName: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Do nothing when name is already the same
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: change_name
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
      newName: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Change description of an existing JBOD
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: change_description
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
      newDescription: 'New Description to JBOD'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Do nothing when description is already the same
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: change_description
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
      newDescription: 'New Description to JBOD'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Disable drive sanitize option of an existing JBOD
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: erase_data
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Do nothing when drive sanitize option is already disabled
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: erase_data
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Clear metadata of an existing JBOD
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: clear_metadata
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Delete an existing JBOD
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: absent
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Do nothing if JBOD is already deleted
  oneview_sas_logical_jbod:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: absent
    data:
      name: '{{ contents.sas_logical_jbod.sas_logical_jbod_name }}-renamed'
  when: contents.sas_logical_jbod.variant == 'Synergy'
  delegate_to: localhost
  register: result
- ansible.builtin.debug:
    var: result.msg
  when: contents.sas_logical_jbod.variant == 'Synergy'

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
