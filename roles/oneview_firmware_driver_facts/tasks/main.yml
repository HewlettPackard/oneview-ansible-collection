---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Gather facts about all Firmware Drivers
  oneview_firmware_driver_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: firmware_drivers

- name: Gather paginated, filtered and sorted facts about Firmware Drivers
  oneview_firmware_driver_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    params:
      start: 0
      count: 3
      sort: 'name:descending'
  delegate_to: localhost

- ansible.builtin.debug:
    var: firmware_drivers

- name: Gather facts about a Firmware Driver by name
  oneview_firmware_driver_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.firmware_driver.baseline_firmware_name }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: firmware_drivers

- name: Gather facts about a Firmware Driver by name and version
  oneview_firmware_driver_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.firmware_driver.baseline_firmware_name }}"
    version: "{{ contents.firmware_driver.version }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: firmware_drivers

- name: Gather facts about Firmware Driver with options
  oneview_firmware_driver_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    options:
      - schema
  delegate_to: localhost

- ansible.builtin.debug:
    var: schema

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
