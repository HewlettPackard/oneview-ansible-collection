---
- name: Gather facts about logical interconnect group
  oneview_logical_interconnect_group_facts:
    config: "{{ config }}"
    name: "{{ lig_name }}"
  delegate_to: localhost
- set_fact:
    lig_uri: "{{ logical_interconnect_groups[0]['uri'] }}"

- name: Create an Enclosure Group
  oneview_enclosure_group:
    config: "{{ config }}"
    state: present
    data:
        name: "{{ item.name }}"
        ipAddressingMode: "External"
        ipv6AddressingMode: "External"
        enclosureCount: 3
        osDeploymentSettings:
          manageOSDeployment: true
          deploymentModeSettings:
            deploymentMode: "Internal"
        interconnectBayMappings:
          - interconnectBay: 3
            logicalInterconnectGroupUri: "{{ lig_uri }}"
          - interconnectBay: 6
            logicalInterconnectGroupUri: "{{ lig_uri }}"
  delegate_to: localhost
  with_items:
    - { name: 'EG' }
    - { name: "{{ enclosure_group_name }}" }

# Run this exampleto create enclosure group with interconnects having ip rangeUris
- name: Create an Enclosure Group with ip rangeUris
  oneview_enclosure_group:
    config: "{{ config }}"
    state: present
    data:
        name: "EG_with_ip_range"
        ipAddressingMode: "IpPool"
        ipRangeUris:
          - /rest/id-pools/ipv4/ranges/d4321a21-42b5-4a1e-9c44-9e8bf9339dfa
        ipv6AddressingMode: "External"
        enclosureCount: 3
        osDeploymentSettings:
          manageOSDeployment: true
          deploymentModeSettings:
            deploymentMode: "Internal"
        interconnectBayMappings:
          - interconnectBay: 3
            logicalInterconnectGroupUri: "{{ lig_uri }}"
          - interconnectBay: 6
            logicalInterconnectGroupUri: "{{ lig_uri }}"
  delegate_to: localhost
  when: ip_range == 'True'

- name: Do nothing with the Enclosure Group when no changes are provided
  oneview_enclosure_group:
    config: "{{ config }}"
    state: present
    data:
        name: "{{ enclosure_group_name }}"
        ipAddressingMode: "External"
        ipv6AddressingMode: "External"
        enclosureCount: 3
        osDeploymentSettings:
          manageOSDeployment: true
          deploymentModeSettings:
            deploymentMode: "Internal"
        interconnectBayMappings:
          - interconnectBay: 3
            logicalInterconnectGroupUri: "{{ lig_uri }}"
          - interconnectBay: 6
            logicalInterconnectGroupUri: "{{ lig_uri }}"
  delegate_to: localhost

- name: Update the Enclosure Group changing the name attribute
  oneview_enclosure_group:
    config: "{{ config }}"
    state: present
    data:
        name: "{{ enclosure_group_name }}"
        newName: "{{ enclosure_group_new_name }}"
  delegate_to: localhost

# This play is compatible with C7000 Enclosures
- name: Update the Enclosure Group configuration script
  oneview_enclosure_group:
    config: "{{ config }}"
    state: present
    data:
        name: "{{ enclosure_group_new_name }}"
        configurationScript: "# script (updated)"
  delegate_to: localhost
  when: variant == "C7000"

- name: Delete the Enclosure Group
  oneview_enclosure_group:
    config: "{{ config }}"
    state: absent
    data:
      name: "{{ enclosure_group_new_name }}"
  delegate_to: localhost

- name: Do nothing when Enclosure Group is absent
  oneview_enclosure_group:
    config: "{{ config }}"
    state: absent
    data:
      name: "{{ enclosure_group_new_name }}"
  delegate_to: localhost
