---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Get currentVersion from URL
  oneview_version_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
  when: config_file.api_version == ""
  register: version

- name: Print currentVersion if an apiVersion is not specified in config file
  ansible.builtin.set_fact:
    currentVersion: "{{ version.ansible_facts.version.currentVersion|int }}"
  when: config_file.api_version == ""

- name: Print currentVersion if an apiVersion is specified in config file
  ansible.builtin.set_fact:
    currentVersion: contents.api_version | string
  when: config_file.api_version != ""

- name: Gather facts about all Ethernet Networks
  oneview_ethernet_network_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- name: Create a Network Set
  oneview_network_set:
    config: '{{ config }}'
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: 'OneViewSDK Test Network Set'
      networkUris:
        - "{{ contents.network_set.ethernet_network_1_name }}"  # can be a name
        - "{{ ethernet_networks[0]['uri'] }}"   # or a URI
      bandwidth:
        maximumBandwidth: 15000
        typicalBandwidth: 3000
  delegate_to: localhost

- name: Gather facts about all Scopes
  oneview_scope_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

# Scope update is only supported V300 and V500
- name: Update the Network set with two scopes
  oneview_network_set:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: OneViewSDK Test Network Set
      scopeUris:
        - "{{ scopes[0]['uri'] }}"
        - "{{ scopes[1]['uri'] }}"
  delegate_to: localhost
  when: currentVersion >= '300' and currentVersion <= '500'

- name: Update the Network Set name to 'OneViewSDK Test Network Set - Renamed' and change the associated networks
  oneview_network_set:
    config: '{{ config }}'
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: 'OneViewSDK Test Network Set'
      newName: 'OneViewSDK Test Network Set - Renamed'
      networkUris:
        - '{{ contents.network_set.ethernet_network_1_name }}'
  delegate_to: localhost

- name: Delete the Network Set
  oneview_network_set:
    config: '{{ config }}'
    sessionID: "{{ session.ansible_facts.session }}"
    state: absent
    data:
      name: 'OneViewSDK Test Network Set - Renamed'
  delegate_to: localhost

- name: Create a Network Set to ensure continuity for automation script
  oneview_network_set:
    config: '{{ config }}'
    sessionID: "{{ session.ansible_facts.session }}"
    state: present
    data:
      name: 'OneViewSDK Test Network Set'
      networkUris:
        - "{{ contents.network_set.ethernet_network_1_name }}"  # can be a name
        - "{{ ethernet_networks[0]['uri'] }}"   # or a URI
      bandwidth:
        maximumBandwidth: 15000
        typicalBandwidth: 3000
  delegate_to: localhost

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
