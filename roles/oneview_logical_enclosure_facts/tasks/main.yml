---
- name: Fetch Session Id
  oneview_get_session_id:
    config: "{{ config }}"
    name: "Test_Session"
  delegate_to: localhost
  register: session

- ansible.builtin.debug:
    var: session

- name: Gather facts about all Logical Enclosures
  oneview_logical_enclosure_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: logical_enclosures

- name: Gather facts about all Scopes
  oneview_scope_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost

- name: Gather paginated, filtered and sorted facts about Logical Enclosures
  oneview_logical_enclosure_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    params:
      start: 0
      count: 3
      sort: 'name:descending'
      filter: 'status=OK'
      scope_uris: "{{ scopes[0]['uri'] }}"

- ansible.builtin.debug:
    var: logical_enclosures

- name: Gather facts about a Logical Enclosure by name
  oneview_logical_enclosure_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_enclosure.logical_enclosure_name }}"
  delegate_to: localhost

- ansible.builtin.debug:
    var: logical_enclosures

# This method is available for API version 300 in synergy and in all API versions in c7000
- name: Gather facts about a Logical Enclosure by name with options
  oneview_logical_enclosure_facts:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
    name: "{{ contents.logical_enclosure.logical_enclosure_name }}"
    options:
      - script
  delegate_to: localhost
  when: contents.logical_enclosure.variant == 'C7000'

- ansible.builtin.debug:
    var: logical_enclosures
- ansible.builtin.debug:
    var: logical_enclosure_script

- name: Logout Session
  oneview_logout_session:
    config: "{{ config }}"
    sessionID: "{{ session.ansible_facts.session }}"
  delegate_to: localhost
